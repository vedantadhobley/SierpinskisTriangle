			Unsigned Integers

A. Convert from initial radix to other two common radices
(i) 0b10001110  to Decimal and Hexadecimal : 
Decimal:
(0x2^0)+(1x2^1)+(1x2^2)+(1x2^3)+(0x2^4)+(0x2^5)+(0x2^6)+(1x2^7)
0+2+4+8+0+0+0+128
14+128
142

Hexadecimal:
1000 1110
1000 in Hex is 8
1110 in Hex is E
So, 8E

(ii) 0xC3BA to Decimal and Binary:
Decimal: 
A= 10 B=11 C=12
(Ax16^0)+(Bx16^1)+(3x16^2) +(Cx16^3)
(10x16^0)+(11x16^1)+(3x16^2) +(12x16^3)
10+176+768+49,152
50,106

Binary:
C 3 B A 
C = 1100 
3 = 0011
B = 1011
A = 1010
1100 0011 1011 1010
1100001110111010

(iii) 81 to Binary and Hexadecimal: 
Binary: 
81 = 64+16+1
     26+24+20
     0b1010001

Hexadecimal: 
0101 0001
5     1
51

(iv) 0b100100100 to Decimal and Hexadecimal : 
Decimal:
(0x2^0)+(0x2^1)+(1x2^2)+(0x2^3)+(0x2^4)+(1x2^5)+(0x2^6)+(0x2^7)+(1x2^8)
0+0+4+0+0+0+32+0+0+256
292

Hexadecimal:
0001 0010 0100
0001 in Hex is 1
0010 in Hex is 2
0100 in Hex is 4
So, 124

(v)0xBCA1 to Decimal and Binary:
Decimal: 
A= 10 B=11 C=12
(1x16^0)+(Ax16^1)+(Cx16^2)+ (Bx16^3)
(1x16^0)+(10x16^1)+(12x16^2) +(11x16^3)
1+160+3,072+45,056
48,289

Binary:
B C A 1
B = 1011
C = 1100
A = 1010
1 = 0001
1011 1100 1010 0001
1011110010100001

(vi) 0 to Binary and Hexadecimal:
Binary:
0x2^0= 0
0

Hexadecimal: 
0000 = 0

(vii) 42 to Binary and Hexadecimal: 
Binary: 
42/2 =21 R 0
21/2 =10 R 1
10/2 = 5 R 0 
5/2 = 2 R1
2/2 = 1 R0 
1/2 = 0 R1 
0b101010

Hexadecimal: 
00101010
0010 1010 
2     A
2A

(viii) 0xBAC4 to Binary and Decimal: 
Binary: 
B A C 4
B = 1011 
A = 1010 
C = 1100
4 = 0100
1011 1010 1100 0100
1011101011000100

Decimal: 
B = 11 A = 10 C = 12 
(4x16^0)+(Cx16^1)+(Ax16^2)+ (Bx16^3)
(4x16^0)+(12x16^1)+(10x16^2) +(11x16^3)
4+192+2,560+45,056
47,812


B. Write using IEC prefixes: 2^14, 2^43, 2^23, 2^58, 2^64, 2^42
(i) 2^14 = (2^10) x (2^4) = (Ki) x (2^4) = 16Ki
(ii) 2^43 = (2^40) x (2^3) = (Ti) x (2^3) = 8Ti
(iii) 2^23 = (2^20) x (2^3) = (Mi) x (2^3) = 8Mi
(iv) 2^58 = (2^50) x (2^8) = (Pi) x (2^8) =  256Pi
(v) 2^64 = (2^60) x (2^4) = (Ei) x (2^4) = 16Ei
(vi) 2^42 = (2^40) x (2^2) = (Ti) x (2^2) = 4Ti

C. Write as powers of 2: 2Ki, 512Pi, 256Ki, 32Gi, 64Mi, 8Ei
(i) 2 Ki = 2^1 x (2^10) = 2^11 
(ii) 512 Pi = 2^9 x (2^50) = 2^59
(iii) 256 Ki = 2^8 x (2^10) = 2^18
(iv) 32 Gi = 2^5 x (2^30) =  2^35
(v) 64 Mi = 2^6 x (2^20) = 2^26
(vi) 8 Ei = 2^3 x (2^60) = 2^63



			Signed Integers


1. The largest 8-bit number written in
      a. Two's Compliment: 127 and +1 is -128
      b. Unsigned Number: 127 and +1 is -1

2. 0 is represented by 00000000
   3 is represented by 00000011
   (1x2^0) + (1x2^1)
   -3 is represented by the two’s complement of 3 
   00000011 ? two’s complement ? 11111101

3. 42 is represented by 0101010
   (1x2^1) + (1x2^4) + (1x2^5)
   -42 is two’s complement of 42 —> 00101010 —> two’s     
   complement ? 11010101+1 = 11010110

4. The largest integer that can be represented by an 8-bit number is 255.
   The largest number that can be represented with 2’s complement is 127.

5. For any given number x we have x + x’ = 0b1. . .1. And for a regular hand calculation we have 0b1 . . . 1 + 0b1 = 0. 

6.Decimal is the preferred radix for regular hand calculations, because it is easier to calculate on two hands.

  Binary based radix is the most useful for computers because the transistors inside the circuits in computers requires electronic signals to operate. 
The on and off states for the switches are determined by the 0 and 1 set by binary and are the easiest way to send signals across the transistors,

  Hexadecimal numbers are a convenient for people who program and need to point out locations in the program memory. This system
cab represent each byte as two hex digits instead of the 8 digits that binary requires.  


			Counting

1. To represent a variable that can only take on the values 0, p or e, we need 2 bits.
   Since there are 3 things to represent, we need n = [log(base2)3] = 2 bits.
2. 2 TiB = 2 x (2^40)
   {log(base2)[2 x 2^40]}
  ={log(base2)[2] + log(base2)[2^40]
  =1 + 40
  = 41
3. If the only value a variable can take on is e, 0 bits are needed to represent it. 



























